Exercise: List to Dictionary Function for Fantasy Game Inventory

Imagine that a vanquished dragon’s loot is represented as a list of strings like this:

dragonLoot = ['gold coin', 'dagger', 'gold coin', 'gold coin', 'ruby']

Write a function named addToInventory(inventory, addedItems), where the inventory parameter is a dictionary representing 
the player’s inventory (like in the previous project) and the addedItems parameter is a list like dragonLoot. 
The addToInventory() function should return a dictionary that represents the updated inventory. 
Note that the addedItems list can contain multiples of the same item
-----------------------------------------------------------------------------------------------------------------------------

Solution: 

def displayInventory(inventory):
   print("Inventory:")
   item_total = 0
   for x, y in inventory.items():
       print(str(y) + ' ' + x)
       item_total = item_total + y
   print("Total number of items: " + str(item_total))  

def addToInventory(inventory, addedItems):
   # check whether the dragons loot contains any items already existing in our inventory
   for i in old_inv.keys():
       # if it does, add the count of these items to our inventory
       if i in dragonLoot:
           extra_loot = dragonLoot.count(i)
           old_inv[i] += extra_loot
   # check to see if the dragons loot contains any items not already existing in our inventory. 
   for i in dragonLoot: 
       a = ''
       b = 0
       # if so, count how many instances of these items and add them into an empty dictionary variable. old_
       if i not in list(old_inv.keys()):
           b = b + dragonLoot.count(i)
           a = i
           # add these the items and their count to our inventory dictionary
           old_inv[a] = b
   return old_inv
    
    
old_inv = {'gold coin': 42, 'rope': 1}
dragonLoot = ['gold coin', 'dagger', 'gold coin', 'gold coin', 'ruby']
new_inv = addToInventory(old_inv, dragonLoot)
displayInventory(new_inv)

    
